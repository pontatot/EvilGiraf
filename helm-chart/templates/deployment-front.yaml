apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "evil-giraf.fullname" . }}
  labels:
    {{- include "evil-giraf.labels" . | nindent 4 }}
spec:
  {{- if not .Values.front.autoscaling.enabled }}
  replicas: {{ .Values.front.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "evil-giraf.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.front.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "evil-giraf.labels" . | nindent 8 }}
        {{- with .Values.front.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.front.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "evil-giraf.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.front.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-db
          image: postgres:16
          command: ['sh', '-c',
                    'until pg_isready -h {{ .Release.Name }}-postgresql -p 5432 -U {{ .Values.postgresql.auth.username }}; do echo waiting for database; sleep 2; done;']
          env:
            - name: PGPASSWORD
              value: {{ .Values.postgresql.auth.password }}
        - name: ef-migrations
          image: "{{ .Values.front.baseImage.repository }}:{{ .Values.front.baseImage.tag | default .Chart.AppVersion }}"
          command: ['/root/.dotnet/tools/dotnet-ef', 'database', 'update']
          env:
            - name: POSTGRES__HOST
              value: {{ .Release.Name }}-postgresql
            - name: POSTGRES__PORT
              value: "5432"
            - name: POSTGRES__DATABASE
              value: {{ .Values.postgresql.auth.database }}
            - name: POSTGRES__USERNAME
              value: {{ .Values.postgresql.auth.username }}
            - name: POSTGRES__PASSWORD
              value: {{ .Values.postgresql.auth.password }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.front.securityContext | nindent 12 }}
          image: "{{ .Values.front.image.repository }}:{{ .Values.front.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.front.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.front.service.port }}
              protocol: TCP
          env:
            - name: ApiKey
              value: {{ .Values.front.auth.apiKey }}
            - name: POSTGRES__HOST
              value: {{ .Release.Name }}-postgresql
            - name: POSTGRES__PORT
              value: "5432"
            - name: POSTGRES__DATABASE
              value: {{ .Values.postgresql.auth.database }}
            - name: POSTGRES__USERNAME
              value: {{ .Values.postgresql.auth.username }}
            - name: POSTGRES__PASSWORD
              value: {{ .Values.postgresql.auth.password }}
          livenessProbe:
            {{- toYaml .Values.front.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.front.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.front.resources | nindent 12 }}
          {{- with .Values.front.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.front.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.front.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.front.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.front.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
