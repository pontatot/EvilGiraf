api:
  nameOverride: ""
  fullnameOverride: ""
  replicaCount: 1
  image:
    repository: harbor.pyxis.dopolytech.fr/main/evil-giraf
    pullPolicy: Always
    tag: "latest"
  baseImage:
    repository: harbor.pyxis.dopolytech.fr/main/evil-giraf-base
    pullPolicy: Always
    tag: "latest"
  imagePullSecrets: []
  
  serviceAccount:
    create: true
    automount: true
    annotations: {}
    name: ""
  
  podAnnotations: {}
  podLabels: {}
  
  podSecurityContext: {}
  securityContext: {}
  
  service:
    type: ClusterIP
    port: 8080
  
  ingress:
    enabled: true
    className: ""
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
      spec.ingressClassName: traefik
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd
    hosts:
      - host: evilgiraf.pyxis.dopolytech.fr
        paths:
          - path: /api
            pathType: Prefix
          - path: /swagger
            pathType: Prefix
    tls:
      - secretName: evilgiraf-tls-secret
        hosts:
          - evilgiraf.pyxis.dopolytech.fr
  
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  livenessProbe:
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  
  volumes: []
  volumeMounts: []
  
  nodeSelector: {}
  tolerations: []
  affinity: {}
  
  auth:
    apiKey: '***'

front:
  nameOverride: ""
  fullnameOverride: ""
  replicaCount: 1
  image:
    repository: harbor.pyxis.dopolytech.fr/main/evil-giraf-front
    pullPolicy: Always
    tag: "latest"
  imagePullSecrets: []
  
  serviceAccount:
    create: false
  
  podAnnotations: {}
  podLabels: {}
  
  podSecurityContext: {}
  securityContext: {}
  
  service:
    type: ClusterIP
    port: 80
  
  ingress:
    enabled: true
    className: ""
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
      spec.ingressClassName: traefik
      traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd
    hosts:
      - host: evilgiraf.pyxis.dopolytech.fr
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: evilgiraf-tls-secret
        hosts:
          - evilgiraf.pyxis.dopolytech.fr
  
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  livenessProbe:
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  
  volumes: []
  volumeMounts: []
  
  nodeSelector: {}
  tolerations: []
  affinity: {}

postgresql:
  auth:
    username: evil_giraf
    password: '***'
    database: evil_giraf
  primary:
    persistence:
      enabled: true
      size: 1Gi
